import { Product } from "../services/types/products"
import { useState, useMemo } from 'react'
import { motion, AnimatePresence } from 'framer-motion'

type Props = {
    product: Product
    initialQuantity: number
    initialUnit: 'm' | 't'
    onSave: (updated: { quantity: number; unit: 'm' | 't' }) => void
    onDelete: () => void
}

const CartProductCard = ({ product, initialQuantity, initialUnit, onSave, onDelete }: Props) => {
    const [expanded, setExpanded] = useState(false)
    const [unit, setUnit] = useState<'m' | 't'>(initialUnit)
    const [quantity, setQuantity] = useState(initialQuantity)

    const priceInfo = product.prices[0]

    const currentPrice = useMemo(() => {
        if (unit === 'm') {
            if (quantity >= priceInfo.priceLimitM2) return priceInfo.priceM2
            if (quantity >= priceInfo.priceLimitM1) return priceInfo.priceM1
            return priceInfo.priceM
        } else {
            if (quantity >= priceInfo.priceLimitT2) return priceInfo.priceT2
            if (quantity >= priceInfo.priceLimitT1) return priceInfo.priceT1
            return priceInfo.priceT
        }
    }, [unit, quantity, priceInfo])

    const totalPrice = currentPrice * quantity

    const handleQuantityChange = (op: 'increment' | 'decrement') => {
        setQuantity(prev => {
            if (unit === 'm') {
                return op === 'increment' ? prev + 1 : Math.max(1, prev - 1)
            } else {
                const step = 0.1
                const newValue = op === 'increment' ? prev + step : prev - step
                return Math.max(0.1, Number(newValue.toFixed(1)))
            }
        })
    }

    const handleUnitToggle = () => {
        setUnit(prev => {
            const newUnit = prev === 'm' ? 't' : 'm'
            setQuantity(newUnit === 'm' ? 1 : 0.1)
            return newUnit
        })
    }

    return (
        <div className="bg-white rounded-2xl p-4 shadow-md transition-all">
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="flex justify-between items-start">
                <div>
                    <h3 className="text-lg font-bold mb-1">{product.productionType}</h3>
                    <p className="text-sm text-gray-700">
                        –î–∏–∞–º–µ—Ç—Ä: <span className="font-semibold">{product.diameter} –º–º</span>
                    </p>
                    <p className="text-sm text-gray-700">
                        –¢–æ–ª—â–∏–Ω–∞ —Å—Ç–µ–Ω–∫–∏: <span className="font-semibold">{product.pipeWallThickness} –º–º</span>
                    </p>
                </div>

                <div className="text-right">
                    <p className="text-sm text-gray-600">–¶–µ–Ω–∞ –∑–∞ {unit === 'm' ? '–º–µ—Ç—Ä' : '—Ç–æ–Ω–Ω—É'}</p>
                    <p className="text-xl font-bold text-[#E35D14]">{currentPrice.toLocaleString()} ‚ÇΩ</p>
                </div>
            </div>

            {/* –ò—Ç–æ–≥–æ–≤–∞—è —Ü–µ–Ω–∞ */}
            <div className="flex items-center justify-between mt-3">
                <p className="font-semibold">–°—É–º–º–∞: {totalPrice.toLocaleString()} ‚ÇΩ</p>
                <button
                    onClick={() => setExpanded(prev => !prev)}
                    className="text-sm text-blue-600 hover:underline"
                >
                    {expanded ? '–û—Ç–º–µ–Ω–∞' : '–ò–∑–º–µ–Ω–∏—Ç—å'}
                </button>
            </div>

            {/* –ë–ª–æ–∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
            <AnimatePresence>
                {expanded && (
                    <motion.div
                        initial={{ opacity: 0, height: 0 }}
                        animate={{ opacity: 1, height: 'auto' }}
                        exit={{ opacity: 0, height: 0 }}
                        transition={{ duration: 0.3 }}
                        className="mt-4 border-t border-gray-300 pt-3 space-y-3"
                    >
                        {/* –°–º–µ–Ω–∞ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è */}
                        <div className="flex justify-between items-center">
                            <span className="text-sm text-gray-700">–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è:</span>
                            <button
                                onClick={handleUnitToggle}
                                className="text-sm text-blue-600 hover:underline"
                            >
                                –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ {unit === 'm' ? '—Ç–æ–Ω–Ω—ã' : '–º–µ—Ç—Ä—ã'}
                            </button>
                        </div>

                        {/* –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ */}
                        <div className="flex items-center justify-between">
                            <div className="flex items-center gap-2">
                                <button
                                    onClick={() => handleQuantityChange('decrement')}
                                    className="px-3 py-1 bg-gray-200 rounded-md hover:bg-gray-300"
                                >
                                    ‚àí
                                </button>
                                <span className="min-w-[30px] text-center">
                                    {unit === 'm' ? quantity : quantity.toFixed(1)}
                                </span>
                                <button
                                    onClick={() => handleQuantityChange('increment')}
                                    className="px-3 py-1 bg-gray-200 rounded-md hover:bg-gray-300"
                                >
                                    +
                                </button>
                            </div>
                            <span className="text-gray-700">–í—Å–µ–≥–æ: {totalPrice.toLocaleString()} ‚ÇΩ</span>
                        </div>

                        {/* –î–µ–π—Å—Ç–≤–∏—è */}
                        <div className="flex justify-between pt-3">
                            <button
                                onClick={() => onSave({ quantity, unit })}
                                className="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600"
                            >
                                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                            </button>
                            <button
                                onClick={onDelete}
                                className="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600"
                            >
                                üóë –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
                            </button>
                        </div>
                    </motion.div>
                )}
            </AnimatePresence>
        </div>
    )
}

export { CartProductCard }